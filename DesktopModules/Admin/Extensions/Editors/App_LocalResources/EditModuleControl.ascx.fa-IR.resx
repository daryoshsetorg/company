<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema_Localized Dnnplus.ir 2018 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plModule.Text" xml:space="preserve">
    <value>ماژول:</value>
  </data>
  <data name="plDefinition.Text" xml:space="preserve">
    <value>تعریف:</value>
  </data>
  <data name="plKey.Text" xml:space="preserve">
    <value>کلید:</value>
  </data>
  <data name="plKey.Help" xml:space="preserve">
    <value>یک نام یکتا برای این کنترل در ماژول وارد کنید.</value>
  </data>
  <data name="plTitle.Text" xml:space="preserve">
    <value>عنوان:</value>
  </data>
  <data name="plTitle.Help" xml:space="preserve">
    <value>عنوان کنترل را مشخص کنید. در صورتی که در پوسته مشخص شده باشد، این آیکون در قسمت هدر ماژول دیده می شود</value>
  </data>
  <data name="plSource.Text" xml:space="preserve">
    <value>منبع:</value>
  </data>
  <data name="plSource.Help" xml:space="preserve">
    <value>فایل منبع  کنترل را انتخاب کنید یا نام نوع کنترل را وارد نمایید.</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>نوع:</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>نوع کنترل را از لیست انتخاب کنید.</value>
  </data>
  <data name="Skin.Text" xml:space="preserve">
    <value>شیء پوسته</value>
  </data>
  <data name="Anonymous.Text" xml:space="preserve">
    <value>ناشناس</value>
  </data>
  <data name="View.Text" xml:space="preserve">
    <value>نمایش</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>ویرایش</value>
  </data>
  <data name="Admin.Text" xml:space="preserve">
    <value>مدیر</value>
  </data>
  <data name="Host.Text" xml:space="preserve">
    <value>میزبان</value>
  </data>
  <data name="plViewOrder.Text" xml:space="preserve">
    <value>رتیب نمایش:</value>
  </data>
  <data name="plViewOrder.Help" xml:space="preserve">
    <value>ترتیب نمایش کنترل در لیست کنترل ها را مشخص کنید.</value>
  </data>
  <data name="plIcon.Text" xml:space="preserve">
    <value>آیکون:</value>
  </data>
  <data name="plIcon.Help" xml:space="preserve">
    <value>آیکون کنترل را انتخاب کنید.  در صورتی که در پوسته مشخص شده باشد، این آیکون در قسمت هدر ماژول دیده می شود.</value>
  </data>
  <data name="plHelpURL.Text" xml:space="preserve">
    <value>آدرس URL راهنما:</value>
  </data>
  <data name="plHelpURL.Help" xml:space="preserve">
    <value>می توانید آدرس Url را برای راهنمای ماژول مشخص کنید. این آدرس در منوی عملیاتی ماژول دیده خواهد شد.</value>
  </data>
  <data name="plModule.Help" xml:space="preserve">
    <value>نام کاربرپسند ماژول</value>
  </data>
  <data name="plDefinition.Help" xml:space="preserve">
    <value>تعریف ماژول</value>
  </data>
  <data name="ControlTitle_editcontrol.Text" xml:space="preserve">
    <value>کنترل ویرایش ماژول</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;در مورد تعاریف ماژول&lt;/h1&gt;&lt;p&gt;کاربر میزبان می تواند ماژول های نصب شده روی پرتال را مدیریت کند&lt;/p&gt;</value>
  </data>
  <data name="AddControl.ErrorMessage" xml:space="preserve">
    <value>در حال حاضر کنترلی با این نام وجود دارد</value>
  </data>
  <data name="MissingSource.ErrorMessage" xml:space="preserve">
    <value>باید مقدار کد این کنترل را مشخص کنید.</value>
  </data>
  <data name="plSupportsPartialRendering.Text" xml:space="preserve">
    <value>از رندر جزئی ای جکس پشتیبان شود؟</value>
  </data>
  <data name="plSupportsPartialRendering.Help" xml:space="preserve">
    <value>این فلگ مشخص میکند که ماژول از رندر جزئی ای جکس پشتیبانی میکند یا خیر. </value>
  </data>
  <data name="supportsModalPopUpsLabel.Help" xml:space="preserve">
    <value>این فلگ پشتیبانی ماژول از پنجره های پاپ آپ را مشخص می کند.</value>
  </data>
  <data name="supportsModalPopUpsLabel.Text" xml:space="preserve">
    <value>پشتیبانی از پاپ آپ:</value>
  </data>
  <data name="DuplicateKey.ErrorMessage">
    <value>کنترلی با کلید همسان در این ماژول وجود دارد</value>
  </data>
  <data name="plSourceFolder.Help">
    <value>پوشه مبدا کنترل را انتخاب کنید.</value>
  </data>
  <data name="plSourceFolder.Text">
    <value>پوشه مبدا:</value>
  </data>
</root>